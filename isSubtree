//
//data class Tree<T>(var value: T) {
//    var left: Tree<T>? = null;
//    var right: Tree<T>? = null;
//}

fun isSubtree(t1: Tree<Int>?, t2: Tree<Int>?): Boolean {
    if(t2==null)
            return true
        if(t1==null)
            return false
        if(checkTree(t1,t2))
            return true
        return isSubtree(t1.left,t2)||isSubtree(t1.right,t2)
}

fun checkTree(x: Tree<Int>?, y: Tree<Int>?): Boolean{
        if (x == null && y == null)
            return true
        if (x == null || y == null)
            return false
        return x.value == y.value &&
                checkTree(x.left, y.left) && checkTree(x.right, y.right)

}
