fun isCryptSolution(crypt: MutableList<String>, solution: MutableList<MutableList<Char>>): Boolean {
    val a: LinkedHashMap<Char, Int> = LinkedHashMap()
        for (i in solution.indices)
            a[solution[i][0]] = solution[i][1] - '0'
        var b = ""
        var c = ""
        var d = ""

        for (x: Char in crypt[0])
            b += a[x]
        if (b.length > 1 && b[0] == '0')
            return false
        for (x: Char in crypt[1])
            c += a[x]
        if (c.length > 1 && c[0] == '0')
            return false
        for (x: Char in crypt[2])
            d += a[x]
        if (d.length > 1 && d[0] == '0')
            return false
        return d.toLong() == b.toLong() + c.toLong()
}
    
